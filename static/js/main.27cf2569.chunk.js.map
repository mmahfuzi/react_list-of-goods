{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortAlghabatically","ALPHABET","sortByLength","LENGTH","reset","this","visibleGoods","goods","console","log","sort","g1","g2","localeCompare","length","getReorderedGoods","resetCheck","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,mBAAqB,WACnB,EAAKD,UAAS,iBAAO,CACnBH,SAAUL,EAASU,cAdzB,EAkBEC,aAAe,WACb,EAAKH,UAAS,iBAAO,CACnBH,SAAUL,EAASY,YApBzB,EAwBEC,MAAQ,WACN,EAAKL,UAAS,iBAAO,CACnBJ,YAAY,EACZC,SAAUL,EAASM,UA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EAjEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNW,EAAY,YAAOC,GAMzB,GAFAC,QAAQC,IAAIb,EAAUD,GAElBA,EACF,OAAOW,EAAaR,UAGtB,OAAQF,GACN,KAAKL,EAASU,SACZ,OAAOK,EAAaI,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MACxD,KAAKrB,EAASY,OACZ,OAAOG,EAAaI,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAEtD,QACE,OAAOR,GA2CYS,CAAkBvB,EAAiBa,KAAKX,OAEvDsB,EAAarB,GAAcC,IAAaL,EAASM,KAEvD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYvB,IAAaL,EAASU,WAGtCmB,QAASf,KAAKL,mBAPhB,iCAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYvB,IAAaL,EAASY,SAGtCiB,QAASf,KAAKH,aAPhB,4BAYA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,YAAaxB,IAGjByB,QAASf,KAAKP,QAPhB,qBAYCkB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,MAHhB,sBAUJ,6BACE,6BACGE,EAAae,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBA3FvB,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.27cf2569.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      return visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n    case SortType.LENGTH:\n      return visibleGoods.sort((g1, g2) => g1.length - g2.length);\n\n    default:\n      return visibleGoods;\n  }\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlghabatically = () => {\n    this.setState(() => ({\n      sortType: SortType.ALPHABET,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(() => ({\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      isReversed: false,\n      sortType: SortType.NONE,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    const resetCheck = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info', {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.sortAlghabatically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success', {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning', {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {resetCheck && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map((good) => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}