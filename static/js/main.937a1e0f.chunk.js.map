{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","isReversed","sortType","reverse","setState","sortAlghabatically","sortByLength","reset","this","visibleGoods","goods","console","log","sort","f1","f2","localeCompare","length","getReorderedGoods","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yQAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiDK,IAAMC,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAU,QAHd,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEI,mBAAqB,WACnB,EAAKD,UAAS,iBAAO,CACnBF,SAAU,gBAdhB,EAkBEI,aAAe,WACb,EAAKF,UAAS,iBAAO,CACnBF,SAAU,cApBhB,EAwBEK,MAAQ,WACN,EAAKH,UAAS,iBAAO,CACnBH,YAAY,EACZC,SAAU,YA3BhB,4CA+BE,WACE,MAAiCM,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdO,EAlEH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNQ,EAAY,YAAOC,GAkBzB,OAdAC,QAAQC,IAAIV,EAAUD,GAEL,aAAbC,GACFO,EAAaI,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAGhC,WAAbb,GACFO,EAAaI,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAG3ChB,GACFQ,EAAaN,UAGRM,EA2CgBS,CAAkBpB,EAAiBU,KAAKR,OAE7D,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAyB,aAAbnB,IAGhBoB,QAASd,KAAKH,mBARhB,iCAaA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAyB,WAAbnB,IAGhBoB,QAASd,KAAKF,aARhB,4BAaA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAapB,IAGjBqB,QAASd,KAAKL,QARhB,sBAaEF,GAA2B,SAAbC,IACd,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKD,MAHhB,sBAUJ,6BACE,6BACGE,EAAac,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBA5FvB,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.937a1e0f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// enum SortType {\n//   NONE,\n//   ALPHABET,\n//   LENGTH,\n// }\n\ntype SortType = 'none' | 'alphabet' | 'length' ;\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  if (sortType === 'alphabet') {\n    visibleGoods.sort((f1, f2) => f1.localeCompare(f2));\n  }\n\n  if (sortType === 'length') {\n    visibleGoods.sort((f1, f2) => f1.length - f2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: 'none',\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlghabatically = () => {\n    this.setState(() => ({\n      sortType: 'alphabet',\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(() => ({\n      sortType: 'length',\n    }));\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      isReversed: false,\n      sortType: 'none',\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              {\n                'is-light': sortType !== 'alphabet',\n              },\n            )}\n            onClick={this.sortAlghabatically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              {\n                'is-light': sortType !== 'length',\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== 'none') && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map((good) => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}